{"version":3,"sources":["store/AppState.js","store/AppReducer.js","components/Panel.js","components/About.js","components/Experience.js","components/Skills.js","components/MatchDayDetails.js","components/LineGraph.js","me.jpg","components/resources/blink_and_wave_popo.svg","App.js","reportWebVitals.js","index.js"],"names":["Context","createContext","initialState","about","open","title","z","experience","skills","AppStateProvider","reducer","children","value","useReducer","Provider","UPDATE_ONE_VAL","UPDATE_ALL","AppReducer","state","action","type","id","valToBeUpdated","newValue","Panel","useContext","dispatch","obj","handle","onStart","maxVal","key","className","style","zIndex","onClick","About","Experience","Skills","MatchDayDetails","netChangeData","Object","entries","betsData","matchday","games","acc","i","length","earnings","wager","push","totalData","currentAmount","keys","getLineData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e22fbeae.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nconst Context = createContext();\n\nexport const initialState = {\n  about: {\n    open: true,\n    title: \"about.md\",\n    z: 0,\n  },\n  experience: {\n    open: true,\n    title: \"experience.md\",\n    z: 1,\n  },\n  skills: {\n    open: true,\n    title: \"skills.md\",\n    z: 2,\n  },\n};\n\nexport function AppStateProvider({ reducer, children }) {\n  const value = useReducer(reducer, initialState);\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nexport function useAppState() {\n  return useContext(Context);\n}\n","export const UPDATE_ONE_VAL = \"UPDATE_ONE_VAL\";\nexport const UPDATE_ALL = \"UPDATE_ALL\";\n\nconst AppReducer = (state, action = {}) => {\n  switch (action.type) {\n    case UPDATE_ONE_VAL:\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          [action.valToBeUpdated]: action.newValue,\n        },\n      };\n    case UPDATE_ALL:\n      return action.newValue;\n    default:\n      return state;\n  }\n};\n\nexport { AppReducer };\n","import React from \"react\";\nimport \"../css/Panel.css\";\nimport Draggable from \"react-draggable\";\nimport { useAppState } from \"../store/AppState\";\nimport { UPDATE_ONE_VAL } from \"../store/AppReducer\";\n\nfunction Panel({ id, children }) {\n  const [state, dispatch] = useAppState();\n  const obj = state[id];\n\n  const handleCloseWindow = () => {\n    dispatch({\n      type: UPDATE_ONE_VAL,\n      valToBeUpdated: \"open\",\n      id: id,\n      newValue: false,\n    });\n  };\n\n  const handleZIndex = () => {\n    let maxVal = 0;\n    for (let key in state) {\n      if (state[key].z > maxVal) {\n        maxVal = state[key].z;\n      }\n    }\n\n    dispatch({\n      type: UPDATE_ONE_VAL,\n      valToBeUpdated: \"z\",\n      id: id,\n      newValue: maxVal + 1,\n    });\n  };\n\n  return obj.open ? (\n    <Draggable handle=\".title-bar\" onStart={handleZIndex}>\n      <div\n        className=\"panel-container\"\n        id={\"panel_\" + id}\n        style={{ zIndex: obj.z }}\n      >\n        <div className=\"title-bar\">\n          <div className=\"title\">{obj.title}</div>\n          <div className=\"title-bar-icons\">\n            <div className=\"title-bar-button\" onClick={handleCloseWindow}>\n              x\n            </div>\n          </div>\n        </div>\n        <div className=\"content-container\">{children}</div>\n      </div>\n    </Draggable>\n  ) : (\n    <div></div>\n  );\n}\n\nexport default Panel;\n","import React from \"react\";\nimport \"../css/TextFile.css\";\n\nfunction About() {\n  return (\n    <div className=\"textfile-container\">\n      <h1>hellooo! i'm mena</h1>\n      <br />\n      <p>\n        <b>Software Engineer</b> @ JPMorgan Chase &amp; Co.\n      </p>\n      <p>\n        <b>CS '20</b> @ at Cornell University\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport '../css/TextFile.css';\n\nfunction Experience(){\n    \n    return (\n        <div className=\"textfile-container\">\n            <h4>Software Engineer</h4>\n            <p>JPMorgan Chase &amp; Co.</p>\n            <p>June 2020 - present</p>\n            <br/>\n\n            <h4>Frontend Engineer Intern</h4>\n            <p>Sumo Logic Inc.</p>\n            <p>June 2019 - August 2019</p>\n            <br/>\n\n            <h4>Software Engineer Intern</h4>\n            <p>SAP</p>\n            <p>June 2018 - August 2018</p>\n        </div>\n    )\n\n}\n\nexport default Experience;","import React from \"react\";\nimport \"../css/TextFile.css\";\n\nfunction Skills() {\n  return (\n    <div className=\"textfile-container\">\n      <h4>Programming Languages</h4>\n      <p>Python, Java</p>\n      <p>HTML, CSS, JavaScript (React)</p>\n      <br />\n\n      <h4>Other Skills</h4>\n      <p>Prometheus (and PromQL), Grafana, Splunk</p>\n      <p>ElasticSearch, MongoDB</p>\n      <p>Kubernetes, AWS (Cloud Practitioner)</p>\n      <p>Bitbucket, Confluence, Jira</p>\n      <p>Figma</p>\n    </div>\n  );\n}\n\nexport default Skills;\n","import React from \"react\";\n\nfunction MatchDayDetails({ matchdayData, matchday }) {\n  return (\n    <>\n      <div>{matchday === 0 ? \"Click a point to see details\" : matchday}</div>\n\n      <div>\n        {matchdayData === 0\n          ? \"\"\n          : matchdayData.map((matchDetails, i) => {\n              return (\n                <div>\n                  <p key={i}>{matchDetails[\"match\"]}</p>\n                  <p key={i + \"bet\"}>{\"my bet: \" + matchDetails[\"bet\"]}</p>\n                  <p key={i + \"winner\"}>\n                    {\"actual winner: \" + matchDetails[\"winner\"]}\n                  </p>\n                  <br />\n                </div>\n              );\n            })}\n      </div>\n    </>\n  );\n}\n\nexport default MatchDayDetails;\n","import React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nimport MatchDayDetails from \"./MatchDayDetails\";\n\nimport betsData from \"../euro2020.json\";\nimport \"../css/EuroBets.css\";\n\nfunction getLineData() {\n  const netChangeData = [];\n  for (const [matchday, games] of Object.entries(betsData)) {\n    let acc = 0;\n    for (let i = 0; i < games.length; i++) {\n      acc += betsData[matchday][i].earnings - betsData[matchday][i].wager;\n    }\n    netChangeData.push(acc);\n  }\n\n  const totalData = [];\n  let currentAmount = 1000;\n  for (let i = 0; i < netChangeData.length; i++) {\n    totalData.push(currentAmount + netChangeData[i]);\n    currentAmount += netChangeData[i];\n  }\n\n  const data = {\n    labels: Object.keys(betsData),\n    datasets: [\n      {\n        label: \"Total # of Unicorns\",\n        data: totalData,\n        fill: false,\n        backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgba(255, 99, 132, 0.2)\",\n        yAxisID: \"y1\",\n      },\n    ],\n  };\n\n  return data;\n}\n\nconst data = getLineData();\n\nconst lineOptions = {\n  scales: {\n    y1: {\n      type: \"linear\",\n      display: true,\n      position: \"left\",\n    },\n  },\n};\n\nfunction LineGraph() {\n  const [clickedElement, setClickedElement] = useState(\"\");\n\n  const getElementAtEvent = (element) => {\n    if (!element.length) return;\n\n    const { index } = element[0];\n    setClickedElement(`${data.labels[index]}`);\n  };\n\n  return (\n    <div className=\"flexbox-panel\">\n      <div className=\"flexbox-panel-right\">\n        <Line\n          data={data}\n          options={lineOptions}\n          getElementAtEvent={getElementAtEvent}\n        />\n      </div>\n      <div className=\"flexbox-panel-left\">\n        <MatchDayDetails\n          matchdayData={clickedElement === \"\" ? 0 : betsData[clickedElement]}\n          matchday={clickedElement === \"\" ? 0 : clickedElement}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default LineGraph;\n","export default __webpack_public_path__ + \"static/media/me.dca35546.jpg\";","export default __webpack_public_path__ + \"static/media/blink_and_wave_popo.ccaf38f3.svg\";","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Panel from \"./components/Panel\";\nimport About from \"./components/About\";\nimport Experience from \"./components/Experience\";\nimport Skills from \"./components/Skills\";\nimport File from \"./components/File\";\n\nimport EuroBets from \"./components/EuroBets\";\nimport me from \"./me.jpg\";\nimport Popo from \"./components/Popo\";\nimport { AppStateProvider } from \"./store/AppState\";\nimport { AppReducer } from \"./store/AppReducer\";\n\nfunction App() {\n  return (\n    <AppStateProvider reducer={AppReducer}>\n      <div className=\"app\">\n        <Panel id=\"about\">\n          <About />\n        </Panel>\n\n        <Panel id=\"experience\">\n          <Experience />\n        </Panel>\n\n        <Panel id=\"skills\">\n          <Skills />\n        </Panel>\n      </div>\n    </AppStateProvider>\n\n    // <div>\n    //   <div className=\"app\">\n    //     <div className=\"flexbox-left\">\n    //       <Panel title={title}>\n    //         <About title={title} />\n    //       </Panel>\n    //     </div>\n    //     <div className=\"flexbox-right\">\n    //       <div className=\"flexbox-right-top\">\n    //         <Panel\n    //           title=\"me.jpg\"\n    //           content={<img src={me} width=\"100%\" height=\"100%\" alt=\"me\" />}\n    //         />\n    //       </div>\n    //       <div className=\"flexbox-right-bottom\">\n    //         <Panel\n    //           title=\"files\"\n    //           content={\n    //             <div>\n    //               <File\n    //                 title=\"about.txt\"\n    //                 setTitle={setTitle}\n    //                 selected={title === \"about.txt\"}\n    //               />\n    //               <File\n    //                 title=\"experience.txt\"\n    //                 setTitle={setTitle}\n    //                 selected={title === \"experience.txt\"}\n    //               />\n    //               <File\n    //                 title=\"skills.txt\"\n    //                 setTitle={setTitle}\n    //                 selected={title === \"skills.txt\"}\n    //               />\n    //             </div>\n    //           }\n    //         />\n    //       </div>\n    //     </div>\n    //   </div>\n    //   <br />\n    //   <br />\n\n    // {/* <div className=\"full-screen\">\n    //   <Panel\n    //     title=\"eurobets.png\"\n    //     content={<EuroBets title=\"hello\"></EuroBets>}\n    //   />\n    // </div> */}\n\n    // {/* <div className=\"full-screen\">\n    //   <Popo />\n    // </div> */}\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport CommonPlaceBookIndex from \"./components/commonplace-book/CommonPlaceBookIndex\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <CommonPlaceBookIndex /> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}